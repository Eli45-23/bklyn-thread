// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id          String   @id @default(cuid())
  name        String
  type        String   // shirt, hat, hoodie, etc.
  basePrice   Float
  description String?
  image       String?
  sizes       String[] // Available sizes
  colors      String[] // Available colors
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  orderItems  OrderItem[]
}

model Customer {
  id        String   @id @default(cuid())
  email     String   @unique
  firstName String
  lastName  String
  phone     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orders    Order[]
}

model Order {
  id              String      @id @default(cuid())
  customerId      String
  customer        Customer    @relation(fields: [customerId], references: [id])
  status          OrderStatus @default(PENDING)
  totalAmount     Float
  subtotal        Float
  tax             Float
  shipping        Float
  stripeSessionId String?
  shippingAddress Json
  billingAddress  Json
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
  orderItems      OrderItem[]
}

model OrderItem {
  id                 String @id @default(cuid())
  orderId            String
  order              Order  @relation(fields: [orderId], references: [id])
  productId          String
  product            Product @relation(fields: [productId], references: [id])
  quantity           Int
  size               String
  color              String
  embroideryText     String?
  embroideryDesign   String? // File path or URL
  embroideryPlacement String // chest, back, sleeve, etc.
  threadColors       String[] // Array of thread colors
  pricePerItem       Float
  totalPrice         Float
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
}

model Design {
  id          String   @id @default(cuid())
  filename    String
  originalName String
  filePath    String
  fileSize    Int
  mimeType    String
  customerId  String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

enum OrderStatus {
  PENDING
  CONFIRMED
  IN_PRODUCTION
  SHIPPED
  DELIVERED
  CANCELLED
}